import Axios from 'axios'
import NavAdmin from '@/components/NavAdmin'
import EventAction from '@/components/EventAction'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import Link from 'next/link'
import MenuUsers from '@/components/MenuUsers'

export default function events() {

  const API_URL = "http://localhost:8080/api/events"
  
  const [events, setEvents] = useState([]); 
  
  useEffect(() => {
    const getAllEvents = async () => {
      try {
        const response = await Axios.get(API_URL);
        setEvents(response.data);
      } catch (error) {
        console.error('Erro ao buscar os eventos:', error);
      }
    };

    getAllEvents();

  }, []);

  const formatDateTime = (date) => {
    const dateObject = new Date(date); // Cria um objeto Date a partir do valor
  
    const year = dateObject.getFullYear();
    const month = String(dateObject.getMonth() + 1).padStart(2, '0'); // Meses começam do zero, então somamos 1
    const day = String(dateObject.getDate()).padStart(2, '0'); // Garantir que o dia tenha 2 dígitos
    const hours = String(dateObject.getHours()).padStart(2, '0'); // Garantir que as horas tenham 2 dígitos
    const minutes = String(dateObject.getMinutes()).padStart(2, '0'); // Garantir que os minutos tenham 2 dígitos
  
    return `${year}-${month}-${day}T${hours}:${minutes}`; // Formato esperado pelo datetime-local
  };


  return (
    <>
      <Head>
        <title>APP-BC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div>
        <NavAdmin />
        <MenuUsers />
      </div>

  
      <div className="d-flex justify-content-center p-2">
        <div className="container">
        <div className="row border-bottom">
        <h3> Lista de Eventos </h3>
        
        <table className="table table-hover">
        <thead>
            <tr>
            <th scope="col">#</th>
            <th scope="col">Nome</th>
            <th scope="col">Data</th>
            <th scope="col">Ação</th>
            </tr>
        </thead>
        <tbody>

        {events.map(event => (
            <tr key={event._id}>
              <th scope="row">{event._id}</th>
              <td>{event.description}</td>
              <td>{formatDateTime(event.date)}</td>
              <td>
                <EventAction pid={ event._id }></EventAction>
              </td>
            </tr>
        ))}

        </tbody>
        </table>
        </div>
        </div>
      </div>  
  </>
  )
}
